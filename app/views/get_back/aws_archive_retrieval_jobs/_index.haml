%h2 AWS Glacier Archives
- if glacier_archives.empty?
  %p None have been created
- else
  %table#glacier_archives
    = render :partial => 'get_back/aws_archive_retrieval_jobs/glacier_archive', :collection => glacier_archives, :as => :archive

:coffeescript
  @initiate_retrieval = (id)->
    $('#glacier_archives').load("#{get_back.aws_archive_retrieval_job_create_path}", {archive_id : id})
  @fetch_archive = (id)->
    url = "#{get_back.aws_fetch_archive_path}"
    data = {archive_id : id}
    context = $(event.target).closest('tr')
    $.ajax
      method : 'post'
      url : url
      data : data
      context : $(event.target)
      success : update
      error : notify
  update = (data, status, jqxhr)->
    @replaceWith(data)
  notify = ->
    if arguments[0].status == 401
      @after("<td style='padding-left:25px;'>" + window.server_message+ "</td>")
    else if arguments[0].status == 410
      @parent().replaceWith(arguments[0].responseText)
  @restore = (id)->
    $.post("#{get_back.aws_restore_archive_path}",{archive_id : id})
  @delete_archive = (id)->
    url = "#{get_back.aws_destroy_archive_path}"
    context = $(event.target).closest('tr')
    $.ajax
      method : 'delete'
      url : url
      data : {archive_id : id}
      context : context
      success : remove_archive
  remove_archive = ->
    @remove()
